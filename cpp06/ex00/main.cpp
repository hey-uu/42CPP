#include "ScalarConverter.hpp"
#include <string>

int main(int argc, char* argv[])
{
    // if (argc != 2)
    //     return 1;
    (void)argc;
    (void)argv;

    // // # 1 overflow
    // ScalarConverter::convert(
    //     "1231212312312312312312312312312312311111111111111111111111111111111111"
    //     "1111111111111111111131231231231111111111111111111111111111111111111111"
    //     "1111111111111113123123123111111111111111111111111111111111111111111111"
    //     "1111111111312312312311111111111111111111111111111111111111111111111111"
    //     "1111131231231231111111111111111111111111111111111111111111111111111111"
    //     "123123");
    // std::cout << std::strtod(
    //     "1231212312312312312312312312312312311111111111111111111111111111111111"
    //     "1111111111111111111131231231231111111111111111111111111111111111111111"
    //     "1111111111111113123123123111111111111111111111111111111111111111111111"
    //     "1111111111312312312311111111111111111111111111111111111111111111111111"
    //     "1111131231231231111111111111111111111111111111111111111111111111111111"
    //     "123123",
    //     NULL) << std::endl;
    // // # 2 negative overflow
    //     ScalarConverter::convert(
    //     "-1231212312312312312312312312312312311111111111111111111111111111111111"
    //     "1111111111111111111131231231231111111111111111111111111111111111111111"
    //     "1111111111111113123123123111111111111111111111111111111111111111111111"
    //     "1111111111312312312311111111111111111111111111111111111111111111111111"
    //     "1111131231231231111111111111111111111111111111111111111111111111111111"
    //     "123123");
    // std::cout << std::strtod(
    //     "-1231212312312312312312312312312312311111111111111111111111111111111111"
    //     "1111111111111111111131231231231111111111111111111111111111111111111111"
    //     "1111111111111113123123123111111111111111111111111111111111111111111111"
    //     "1111111111312312312311111111111111111111111111111111111111111111111111"
    //     "1111131231231231111111111111111111111111111111111111111111111111111111"
    //     "123123",
    //     NULL) << std::endl;
    // // # 3 앞에 공백
    // ScalarConverter::convert("         -123   ");
    // std::cout << std::strtod("         -123   ", NULL) << std::endl;
    // // # 4 앞에 공백, 뒤로는 다른 문자
    // ScalarConverter::convert("         -123adsf   ");
    // std::cout << std::strtod("         -123asdf   ", NULL) << std::endl;
    // // # 5 뒤로 다른 문자
    // ScalarConverter::convert("-123adsf   ");
    // std::cout << std::strtod("-123asdf   ", NULL) << std::endl;
    // # 6 실수형 문자
    //   ScalarConverter::convert("-123.0ff");
    // std::cout << std::strtod("-123.0ff", NULL) << std::endl;
    // std::cout << std::atof("-123.0ff") << std::endl;
    // # 7 뒤에 공백
    ScalarConverter::convert("0");
    std::cout << std::endl;
    ScalarConverter::convert("nan");
    std::cout << std::endl;
    ScalarConverter::convert("42.0f");
    std::cout << std::endl;
    ScalarConverter::convert(
        "1231212312312312312312312312312312311111111111111111111111111111111111"
        "1111111111111111111131231231231111111111111111111111111111111111111111"
        "1111111111111113123123123111111111111111111111111111111111111111111111"
        "1111111111312312312311111111111111111111111111111111111111111111111111"
        "1111131231231231111111111111111111111111111111111111111111111111111111"
        "123123");
    std::cout << std::endl;
    ScalarConverter::convert(
        "-123121231231231231231231231231231231111111111111111111111111111111111"
        "1"
        "1111111111111111111131231231231111111111111111111111111111111111111111"
        "1111111111111113123123123111111111111111111111111111111111111111111111"
        "1111111111312312312311111111111111111111111111111111111111111111111111"
        "1111131231231231111111111111111111111111111111111111111111111111111111"
        "123123");
    std::cout << std::endl;
    ScalarConverter::convert("2147483650");
    std::cout << std::endl;
}
